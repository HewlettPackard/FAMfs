# Large number of operations testing different operations. Maximum of nodes should be four as rank is multiplied
# by key_seed and begins to generate too large values for keys.

# Put several sets of sequences of 99999 values
bput 99999 199135790 AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bput 99999 25468001 abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bput 99999 567891 ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

# Verify we got the correct values we put in. For FLOAT type keys, because of magnitude of key_seed do not generate unique keys
# therefore verify is turned off on inTestOps3.txt
bget 99999 199135790  AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bget 99999 25468001  abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bget 99999 567891  ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

flush

# Test operations of bulkgetop (1) NEXT and (2) PREV
# This test is turned off for BYTE keys as the NEXT/PREV operations do not generate consistent NEXT/PREV values.
# FLOAT values also have a problem generating unique keys therefore a smaller number for this request is tested.
bgetop 9999 25468001 1
bgetop 9999 25478001 2

# Test getting the FIRST value with different keys, should get the same key/value
get 567891 3
get 199135790 3
get 25468001 3

# Put more sequences
bput 99999 299135790 AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bput 99999 25246802 abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bput 99999 256782 ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

flush
# Get LAST value, should get the same key/value
get 25468001 4
get 199135790 4
get 567891 4

# Put more sequences
bput 99999 399135790 AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bput 99999 35246803 abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bput 99999 356783 ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

bput 99999 499135790 AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bput 99999 45246804 abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bput 99999 456784 ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

# Delete one sequence
bdel 99999 299135790
bdel 99999 25246802
bdel 99999 256782

# Put more
bput 99999 599135790 AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bput 99999 55246805 abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bput 99999 556785 ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

bput 99999 991357900 AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bput 99999 55468000 abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bput 99999 167890 ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

flush

# Using the tester's ngetn functions issue 999999 consecutive get NEXT operations starting with key 0
# This is also turned off for BYTE keys as NEXT operation does not generate consistent values.
ngetn 999999 0 0

# Get FLAST (4) and FIRST (3) key/value
get 25468001 4
get 199135790 4
get 567891 4
get 567891 3
get 199135790 3
get 25468001 3

# Delete an intermediate sequence
bdel 99999 499135790
bdel 99999 45246804
bdel 99999 456784

# Get and verify values from first set of sequences. DO NOT verify last sequence as it overlaps and does not verify
# This is not true for strings as they generate unique keys.
bget 99999 199135790  AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz_AbCdEfGhIjKlMnOpQrStUvWxYz
bget 99999 25468001  abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz
bget 99999 567891 # ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ_ABCDEFGHIJKLMNOPQRSTUVWXYZ

# Delete several sets
bdel 99999 399135790
bdel 99999 35246803
bdel 99999 356783

bdel 99999 599135790
bdel 99999 55246805
bdel 99999 556785

bdel 99999 991357900
bdel 99999 55468000
bdel 99999 167890

flush
# Get FLAST (4) and FIRST (3) key/value
get 25468001 4
get 199135790 4
get 567891 4
get 567891 3
get 199135790 3
get 25468001 3

# Delete that last set of sequences so there should be nothing left in DB
bdel 99999 199135790
bdel 99999 25468001
bdel 99999 567891

flush

# These should generate ERROR as there is nothing left in DB
get 11468001 4
get 119135790 4
get 117891 4
get 117891 3
get 119135790 3
get 11468001 3
